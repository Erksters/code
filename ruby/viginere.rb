#!/usr/bin/env ruby

RAW = <<DOC
YVPBQHNASMOQNAZAPBAUFXHFNUEFUSCPARZJRZXEEPZFP
QDOHUQZWYUANQLDUOATJPBGNFJQFBQDPMOYXQLFXINRMS
GMSTXFEESSEKZDNIVZMZEGBCCUYOFYCQDTEEJGFVFSNWS
QYOUFJRZXORLUHZQDACMWNWQTUTRDDASUFFPCQCEJHVOK
SJNHSSZTUJUCYGPVSHSODENQKZBXDUTKPFQRJJQLXZOGJ
GEKNLVXVLXMPCQWNKFIBSTZBSRBZDNYYMHSWNKFIBSKTD
TOHYQZXEIQJFTXSAHYVPXFIPFHTYZOSJONRBERWGTXOEG
MSLNHEEXOCIOOHQROSSIGFZWIPIFLITCQIGXSWPMNQNBE
BGDRNBEYFHRPSJCTAENBRZDOPJGDGUTUTIEFMLVIAPWNE
EXVTZFHRWSQYDENZHSOZTVHOESANVXOYSZEINHLLXEPTA
AYZEAYTZBMNLXSNEDEPTAXEZIPFHTYZPETHZMALFFGHOX
LNXDPODGETIAMAMZZBTMMTVTBTXFHRHZLCEIPFZOOEITS
CQQDOHUYPIBRBYCNYXSRFQSZQEEXVZEXDOJOFDTEAYWNK
FEQGMLCQPNWOEOMNQHSYDDAYNNPNMUGMSYDUCNYWZXEEE
ASCKXTUTIRRYAADDCKOTVHOWZDOGTQZVEPEJGPXFESKWN
SQNGBOJCROEFIERQNGNQLDUOABSLBQSGNZWPMCVSUERQN
RHSDCUTLTTZZFIZNNLDUOAGSEGQEAFIERQNGNQLDUOAFB
OQDOHUYPIEHNWWYQ
DOC

# one line, one love
CODE = RAW.split.join

# find the key (size) to my heart
# strategy: test 2-25 for possible key lengths
#   take distributions for each "slice" based on key length
#     (i.e. keylength = 5 will have 5 "slices")
#   find the distributions that match closely

(2..25).each do |keysize|
  dists = []

  # every now and then I get a little bit lonely
  keysize.times do |offset|
    dist = {}

    CODE.split('').each_with_index do |c, i|
      if (i + offset - 1) % keysize == 0
        dist[c] = 1 + (dist[c] || 0)
      end
    end

    # we now have a distribution for this current slice
    dists << dist

  end

end

